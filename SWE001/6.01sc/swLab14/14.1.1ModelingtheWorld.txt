Note I am using 0.1 as the finest resolution possible for my answers

1. Consider the situation below:
What, roughly (within 0.1), is the starting pose of the robot?
x = 0.4 meters, y = -0.2 meters

What are the indices corresponding to this pose?
ix = 4, iy = 2

What is the point at the center of the cell corresponding to these grid indices?
x = 0.5 meters, y = -0.1 meters

2. Consider the situation below (which includes an occupied grid cell):

Assume that there are walls around the whole space so that any grid location
where part of the robot would be off the grid would generate a collision.

What are the (ix, iy) grid indices that would be safe.  Recall that in general
you don't know where the robot is within the cell, so you have to be conservative
and assume it could be anywhere within the cell.  The orientation of the robot
does not affect whether it's in a collision, since we are treating the robot
as if it were circular.

Enter a list of tuples of (ix, iy) indices as you would in Python:
[(1,1),(2,1),(3,1),(4,1),(1,2),(2,2),(3,2),(4,2),(4,3),(4,4)]